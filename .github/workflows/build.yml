名称 :建造

在 : [推 ,拉_请求 ]

工作 :

建造 :

运行 : $ { {矩阵.os } }

策略 :

故障-快速 :假

矩阵 :

操作系统 : [windows-最新 ]

构建类型 : [发布 ]

启用用户界面（_U） : [在 ]

包括 :

 -操作系统 :windows-最新

构建类型 :发布

启用用户界面（_U） :在

步骤 :

 -使用 :行动/签出@v3

具有 :

 子模块 :“递归”

 -名称 : 卡切

使用 :hendrikmuhs/ccache-action@v1

if :runner.os =='Linux'

具有 :

key : $ { {矩阵.os } }-$ { {matrix.enable_ui } }

 -使用 :seanmiddleditch/gha-setup-ninja@master

 -使用 :ilammy/msvc-dev-cmd@v1

if :runner.os =='Windows'

 -名称 :Install Dependencies

shell :bash

run :|

if [[ "${{ runner.os }}" == "Linux" ]] ; then

sudo apt-get update -qq

sudo apt-get install -y \

libx11-dev libxcursor-dev libxi-dev

fi

 -名称 :Generating Makefiles

shell :bash

run :|

if [[ "${{ runner.os }}" == "Windows" ]] ; then

export enable_ccache=off

else

export enable_ccache=on

fi

curl -L https://github.com/blueloveTH/aseprite/releases/download/v0.01/skia.zip --output skia.zip

7z x skia.zip

cmake -S . -B build -G Ninja \

-DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \

-DENABLE_UI=${{ matrix.enable_ui }} \

-DENABLE_CCACHE=$enable_ccache \

-DLAF_BACKEND=skia \

-DSKIA_DIR=./skia \

-DSKIA_LIBRARY_DIR=./skia/out/Release-x64 \

-DSKIA_LIBRARY=./skia/out/Release-x64/skia.lib

 -名称 :Compiling

shell :bash

run :|

cd build && ninja

 -使用 :actions/upload-artifact@v3

具有 :

名称 : 插入

path :|

D:/a/aseprite/aseprite/build/bin/data

D:/a/aseprite/aseprite/build/bin/aseprite.exe
